<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jie.dao.PinglunMapper">
    <resultMap id="BaseResultMap" type="com.jie.entity.Pinglun">
        <id column="intl" jdbcType="INTEGER" property="intl"/>
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="wenti" jdbcType="VARCHAR" property="wenti"/>
        <result column="neirong" jdbcType="VARCHAR" property="neirong"/>
        <result column="user" jdbcType="VARCHAR" property="user"/>
        <result column="biaoji" jdbcType="INTEGER" property="biaoji"/>
        <result column="ctime" jdbcType="TIMESTAMP" property="ctime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    intl, uuid, wenti, neirong, user, biaoji, ctime
  </sql>
    <select id="selectByExample" parameterType="com.jie.entity.PinglunExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from pinglun
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pinglun
        where intl = #{intl,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pinglun
    where intl = #{intl,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.jie.entity.PinglunExample">
        delete from pinglun
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jie.entity.Pinglun">
    insert into pinglun (intl, uuid, wenti, 
      neirong, user, biaoji, 
      ctime)
    values (#{intl,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{wenti,jdbcType=VARCHAR}, 
      #{neirong,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, #{biaoji,jdbcType=INTEGER}, 
      #{ctime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.jie.entity.Pinglun">
        insert into pinglun
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="intl != null">
                intl,
            </if>
            <if test="uuid != null">
                uuid,
            </if>
            <if test="wenti != null">
                wenti,
            </if>
            <if test="neirong != null">
                neirong,
            </if>
            <if test="user != null">
                user,
            </if>
            <if test="biaoji != null">
                biaoji,
            </if>
            <if test="ctime != null">
                ctime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="intl != null">
                #{intl,jdbcType=INTEGER},
            </if>
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="wenti != null">
                #{wenti,jdbcType=VARCHAR},
            </if>
            <if test="neirong != null">
                #{neirong,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                #{user,jdbcType=VARCHAR},
            </if>
            <if test="biaoji != null">
                #{biaoji,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                #{ctime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jie.entity.PinglunExample" resultType="java.lang.Long">
        select count(*) from pinglun
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update pinglun
        <set>
            <if test="record.intl != null">
                intl = #{record.intl,jdbcType=INTEGER},
            </if>
            <if test="record.uuid != null">
                uuid = #{record.uuid,jdbcType=VARCHAR},
            </if>
            <if test="record.wenti != null">
                wenti = #{record.wenti,jdbcType=VARCHAR},
            </if>
            <if test="record.neirong != null">
                neirong = #{record.neirong,jdbcType=VARCHAR},
            </if>
            <if test="record.user != null">
                user = #{record.user,jdbcType=VARCHAR},
            </if>
            <if test="record.biaoji != null">
                biaoji = #{record.biaoji,jdbcType=INTEGER},
            </if>
            <if test="record.ctime != null">
                ctime = #{record.ctime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update pinglun
        set intl = #{record.intl,jdbcType=INTEGER},
        uuid = #{record.uuid,jdbcType=VARCHAR},
        wenti = #{record.wenti,jdbcType=VARCHAR},
        neirong = #{record.neirong,jdbcType=VARCHAR},
        user = #{record.user,jdbcType=VARCHAR},
        biaoji = #{record.biaoji,jdbcType=INTEGER},
        ctime = #{record.ctime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jie.entity.Pinglun">
        update pinglun
        <set>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="wenti != null">
                wenti = #{wenti,jdbcType=VARCHAR},
            </if>
            <if test="neirong != null">
                neirong = #{neirong,jdbcType=VARCHAR},
            </if>
            <if test="user != null">
                user = #{user,jdbcType=VARCHAR},
            </if>
            <if test="biaoji != null">
                biaoji = #{biaoji,jdbcType=INTEGER},
            </if>
            <if test="ctime != null">
                ctime = #{ctime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where intl = #{intl,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jie.entity.Pinglun">
    update pinglun
    set uuid = #{uuid,jdbcType=VARCHAR},
      wenti = #{wenti,jdbcType=VARCHAR},
      neirong = #{neirong,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      biaoji = #{biaoji,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=TIMESTAMP}
    where intl = #{intl,jdbcType=INTEGER}
  </update>
</mapper>